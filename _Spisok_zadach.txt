Список задач:



1)+освоить работу с "новым" MQ135.
.
[готово]



2)++-сделать для него новую модель объекта
(Потребовалась передача параметров температуры и влажности, от этого возникла проблема:
за оба этих параметра отвечает один указатель: &dht, а значения _Value есть и там и там.)
.
[что-то не так со значениями, хотя параметр вроде передаётся и dht работает]



3)++сделать массив экземпляров класса сенсор
(Проблема с непониманием работы с указателями и ссылками.
Сделать массив экземпляров, при котором программа в принципе скомпилируется, получилось, 
но работает всего 1 параметр из 5: расчёт коэффициента пульсаций
[вроде бы работает - только он не показывает значения]. 
Требуется нормально понять работу с указателями - подозрения, что проблема во взаимодействии
массива указателей на экземпляры классов и конструкторе класса [так как запустился только сенсор пульсаций].)
.
[всё работает]



4)++для созданного массива сделать проход по массиву в цикле
для получения значения danger_level и установки соответствующего режима светодиода.
(Работает. Проходя по всем сенсорам, вызовы метода getDanger() собираются в счётчик, 
а потом устанавливается режим светодиода Danger, если счётчик>0.)
.
[всё работает]



5)+++реализовать функцию игнора параметров.
(Массив в основной программе, вызов метода экрана в основной программе.)
.
[всё работает]



6)--что-то не так с энкодером - он не всегда работает предсказуемо.
для наверняка правильной работы требуется крутить энкодер со скоростью 1 страница чуть ли не раз в секунду.
При быстрой прокрутке бывает такое, что кручение в любую сторону меняет страницы только вперёд.
.
[всё работает, если крутить по-человечески]



7)--функция отрисовки значка выхода параметра за границы оптимальных пределов.
.
[работает, сделана пока что для первых двух страниц]



8)--функция отрисовки "треугольника" положения текущего значения параметра относительно границ оптимальных пределов.
Уже есть небольшая идея реализации:
отрисовываем всегда весь "треугольник", но убираем часть "по формуле" (максимальное количество - текущее количество полосок).
(легче в 2 действия сделать нами ожидаемое: нарисовать всю фигуру и вырезать лишнее, чем делать 10 условий или 10 кейсов).
.
[работает, сделана пока что для первых двух страниц]



9)--функция гашения экрана (энергосберегающий режим) по зажатию кнопки или через 10 минут бездействия.
(всё ещё не посмотрел есть ли такая возможность у нашего экрана)
.
[ожидает реализации]



10)Русские буквы на экране!
.
[ожидает реализации]



11)+-Оптимизация кода...
.
- в tft_code сбор двух(2) конструкций условий игнора при отрисовке страниц в одну(1);
- использование конструкций fastread();
- разобраться с передачей параметров в класс Сенсор, отвечающих за ссылки на другие экземпляры класса Сенсор и за ссылки на "функциональные классы" (dht, mq135);
(сейчас 5! параметров в конструкторе класса Сенсор отвечают за передачу ссылок - каждый отвечает за 1 сслыку...)
- 
- 
- 
.
[в ожидании...]









до оптимизации типов:
//
Скетч использует 24386 байт (75%) памяти устройства. Всего доступно 32256 байт.
Глобальные переменные используют 1197 байт (58%) динамической памяти, оставляя 851 байт для локальных переменных. Максимум: 2048 байт.


после оптимизации типов:
//
Скетч использует 24334 байт (75%) памяти устройства. Всего доступно 32256 байт.
Глобальные переменные используют 1191 байт (58%) динамической памяти, оставляя 857 байт для локальных переменных. Максимум: 2048 байт.

...


без tft (без myScreen.refresh();):
//
Скетч использует 15000 байт (46%) памяти устройства. Всего доступно 32256 байт.
Глобальные переменные используют 996 байт (48%) динамической памяти, оставляя 1052 байт для локальных переменных. Максимум: 2048 байт.
//
//
//
с отладкой по сенсорам:
//
Скетч использует 16084 байт (49%) памяти устройства. Всего доступно 32256 байт.
Глобальные переменные используют 1106 байт (54%) динамической памяти, оставляя 942 байт для локальных переменных. Максимум: 2048 байт.
//
//
//
с точками отладки:
//
Скетч использует 16266 байт (50%) памяти устройства. Всего доступно 32256 байт.
Глобальные переменные используют 1226 байт (59%) динамической памяти, оставляя 822 байт для локальных переменных. Максимум: 2048 байт.



без (*t).refresh();, но с с myScreen.refresh() + свои точки отладки:
//
Скетч использует 19868 байт (61%) памяти устройства. Всего доступно 32256 байт.
Глобальные переменные используют 1297 байт (63%) динамической памяти, оставляя 751 байт для локальных переменных. Максимум: 2048 байт.


